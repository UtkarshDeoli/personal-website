
[{"content":"üëã Hi there! I\u0026rsquo;m Utkarsh ","date":"6 December 2024","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":" What is Obsidian ? # Obsidian is a powerful, privacy-focused note-taking and knowledge management app designed for building a personal knowledge base. It uses plain text Markdown files stored locally, giving users complete ownership and control over their data. With its extensive customization options, plugins, and graph view, Obsidian excels at linking and visualizing ideas, making it an ideal tool for creative thinkers, researchers, and writers. Its offline functionality ensures seamless access to notes without relying on cloud services.\nThis is currently my obsidian vault, People use it as their second brain, and it has some cool features to represent your notes here is a example for my obsidian vault.\nBut you can use it to automate your hugo blog website. Credits to network chuck for the idea.\nWhat is hugo tho ? # oh ya i forgot to tell you what hugo is . So hugo is a basic CMS written in go used for generating static sites. you can use premade themes with hugo and add your content and wallah you have a website .\nHow do i setup my hugo website ? # 1. Install Hugo # On Linux:\nbash\nCopy code\nsudo apt install hugo\nAlternatively, use the official Hugo documentation to install the latest version.\nOn macOS:\nbash\nCopy code\nbrew install hugo\nOn Windows:\nDownload the binary from the Hugo releases page.\nCheck the version to ensure it\u0026rsquo;s installed:\nbash\nCopy code\nhugo version\n2. Create a New Hugo Site # Run the following command to create a new Hugo site:\nbash\nCopy code\nhugo new site my-website\nThis creates a directory structure for your site in my-website.\n3. Add a Theme # Browse Hugo themes at themes.gohugo.io and choose one.\nAdd a theme using Git:\nbash\nCopy code\ncd my-website git init git submodule add https://github.com/your-chosen-theme-repo themes/your-theme-name\nSet the theme in config.toml:\ntoml\nCopy code\ntheme = \u0026quot;your-theme-name\u0026quot;\n4. Add Content # Create a new post:\nbash\nCopy code\nhugo new posts/my-first-post.md\nEdit the file in the content/posts/ directory:\nyaml\nCopy code\n--- title: \u0026quot;My First Post\u0026quot; date: 2024-11-29 draft: true --- Write your content here.\n5. Preview the Website Locally # Run the Hugo development server:\nbash\nCopy code\nhugo server -D\nVisit http://localhost:1313 to preview your site.\n6. Build the Site # Generate the static files for deployment:\nbash\nCopy code\nhugo\nThe output will be in the public/ directory.\n7. Deploy the Site # Choose a hosting service (e.g., GitHub Pages, Netlify, or Vercel).\nDeploying on GitHub Pages: # Initialize a Git repository in your Hugo site directory:\nbash\nCopy code\ngit init\nAdd the generated public/ folder as a Git subtree or separate branch.\nbash\nCopy code\ngit add . git commit -m \u0026quot;Initial commit\u0026quot;\nPush to GitHub.\nDeploying on Netlify: # Drag the public/ folder into your Netlify dashboard. Configure build settings: Build Command: hugo Publish Directory: public 8. Customize Your Site # Edit the config.toml file to set site-wide settings:\ntoml\nCopy code\nbaseURL = \u0026quot;https://your-site-url.com/\u0026quot; languageCode = \u0026quot;en-us\u0026quot; title = \u0026quot;My Hugo Site\u0026quot; theme = \u0026quot;your-theme-name\u0026quot;\nAdd static files (e.g., images) to the static/ directory.\nUse shortcodes for additional functionality (like embedding YouTube videos or tweets).\n9. Enhance Your Site # Install plugins or enable features like tags, categories, or pagination. Use custom CSS and layouts in the layouts/ folder for more control. How do i setup the auto deploy blog # For now watch the original content here I will soon make a video or just complete the blog to instruct you further as he uses the hostinger because he got them as a sponcer. But you can just use the Firebase to deploy your hugo website. I have also used that only.\n","date":"29 November 2024","externalUrl":null,"permalink":"/blog/auto-blogs/","section":"My Blogs","summary":"","title":"Respire for auto blogs (Obsidian + Hugo)","type":"blog"},{"content":" Understanding the Internet of Things (IoT): Our Connected Future # The Internet of Things, or IoT, might sound like a futuristic concept, but it‚Äôs very much a part of our present. You may not realize it, but IoT is already surrounding us from every direction, transforming the way we live, work, and interact with our environment. In this article, we\u0026rsquo;ll delve into what IoT is, how it‚Äôs making life easier, solving problems, and what the future holds for this revolutionary technology. Plus, we‚Äôll explore how you can get started with your own IoT projects.\nWhat is IoT? # IoT refers to the network of physical objects‚Äî‚Äúthings‚Äù‚Äîthat are embedded with sensors, software, and other technologies to connect and exchange data with other devices and systems over the internet. These ‚Äúthings‚Äù can range from everyday household items to sophisticated industrial tools.\nExample: Imagine your morning routine. Your alarm clock rings and signals your coffee maker to start brewing coffee. As you step into the kitchen, your smart fridge reminds you that you‚Äôre running low on milk. This seamless interaction between devices is a classic example of IoT in action.\nWhy is IoT Surrounding Us? # IoT devices are becoming ubiquitous due to several reasons:\nAdvancements in Technology: The cost of sensors and connectivity has dropped significantly, making it feasible to embed them in a variety of devices. Convenience and Efficiency: IoT devices automate mundane tasks, making our lives easier and more efficient. Data Insights: These devices collect vast amounts of data that can be analyzed to gain valuable insights, leading to smarter decision-making. How IoT is Making Life Easy : # IoT has permeated various aspects of our lives, providing convenience and efficiency in numerous ways.\nSmart Homes: IoT enables home automation systems that control lighting, heating, and security, enhancing comfort and safety.\nExample: Smart thermostats like Nest learn your schedule and preferences, adjusting the temperature to save energy and improve comfort. Health and Fitness: Wearable devices track our physical activity, monitor health metrics, and provide insights to improve our well-being.\nExample: Fitness trackers like Fitbit monitor steps, heart rate, and sleep patterns, encouraging a healthier lifestyle. Transportation: IoT enhances vehicle connectivity for better navigation, maintenance alerts, and even autonomous driving.\nExample: Tesla cars use IoT technology for over-the-air software updates and autonomous driving capabilities. How IoT Solves Problems # IoT is not just about convenience; it also addresses significant challenges across various sectors.\nHealthcare: Remote patient monitoring and telehealth services provide better care for patients, especially in remote areas.\nExample: IoT-enabled devices can monitor chronic conditions like diabetes, sending real-time data to healthcare providers. Agriculture: Smart farming technologies optimize irrigation, monitor soil health, and increase crop yields.\nExample: IoT sensors in fields measure moisture levels and automatically adjust irrigation systems, conserving water and improving crop health. Urban Management: Smart cities use IoT to manage traffic, reduce energy consumption, and enhance public safety.\nExample: IoT-powered traffic lights can adjust to real-time traffic conditions, reducing congestion and pollution. The Future of IoT # The potential of IoT is vast, and its future looks promising with several emerging trends:\n5G Connectivity: Faster, more reliable internet will enhance IoT device performance and enable more complex applications. Artificial Intelligence: AI integration will make IoT devices smarter, capable of predictive maintenance and advanced analytics. Edge Computing: Processing data closer to where it is generated will reduce latency and improve efficiency. How to Get Started with IoT Projects # Interested in diving into the world of IoT? Here‚Äôs how you can start:\nLearn the Basics: Familiarize yourself with IoT concepts and technologies. Online courses and tutorials can be incredibly helpful.\nExample: Platforms like Coursera and Udemy offer courses on IoT fundamentals. Get Hands-On Experience: Start with simple projects using development boards like Arduino or Raspberry Pi.\nExample: Build a basic IoT project like a smart plant watering system using a moisture sensor and an Arduino. Join a Community: Engage with other IoT enthusiasts through online forums, local meetups, or hackathons.\nExample: Websites like Instructables and GitHub host numerous IoT project ideas and community discussions. Experiment and Innovate: Don‚Äôt be afraid to experiment and come up with your own IoT solutions to everyday problems.\nIn conclusion, IoT is not just a technological trend but a transformative force shaping our present and future. By understanding its applications and potential, you can leverage IoT to create smarter, more efficient solutions in your daily life and beyond. So, why wait? Start exploring the world of IoT today!\n","date":"12 June 2024","externalUrl":null,"permalink":"/blog/internet-of-things/","section":"My Blogs","summary":"","title":"Internet Of Things","type":"blog"},{"content":" How to Install Arch Linux # Step 1: Download the Arch Linux ISO # Go to the Arch Linux website and navigate to the download section. Download the latest Arch Linux ISO image. Step 2: Create Bootable Media # Use a USB drive or a CD/DVD to create a bootable installation media. You can use tools like Rufus, Etcher, or dd command on Linux to write the ISO image to the media. Step 3: Boot into Arch Linux Live Environment # Insert the bootable media into your computer and boot from it. You will be greeted with the Arch Linux boot menu. Step 4: Set the Keyboard Layout # Use the loadkeys command to set your keyboard layout if necessary. For example, for a US keyboard layout, you would use loadkeys us. Step 5: Connect to the Internet # Use the ip link command to identify your network interface. Use ip link set \u0026lt;interface\u0026gt; up to bring up the interface. Use wifi-menu to connect to a Wi-Fi network, or dhcpcd to obtain an IP address via DHCP for a wired connection. Step 6: Partition the Disk # Use tools like fdisk, parted, or cfdisk to partition your disk. Create at least one partition for the root filesystem (e.g., /dev/sda1). Step 7: Format the Partitions # Format the partitions using appropriate filesystems. For example, use mkfs.ext4 /dev/sda1 to format a partition with the ext4 filesystem. Step 8: Mount the Partitions # Mount the root partition to /mnt. For example, mount /dev/sda1 /mnt. Step 9: Install the Base System # Use the pacstrap command to install the base system packages. For example, pacstrap /mnt base linux linux-firmware. Step 10: Generate an fstab File # Generate an fstab file to define how disk partitions should be mounted. Use genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab. Step 11: Chroot into the Installed System # Use arch-chroot to change the root into the installed system. For example, arch-chroot /mnt. Step 12: Set the Time Zone # Set the correct time zone using the ln command. For example, ln -sf /usr/share/zoneinfo/Region/City /etc/localtime. Step 13: Generate Localization Settings # Uncomment desired locales in /etc/locale.gen. Generate the locales with locale-gen. Set the system language with echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf. Step 14: Set Hostname # Set the hostname of your system with echo myhostname \u0026gt; /etc/hostname. Step 15: Set Root Password # Set the root password with the passwd command. Step 16: Install a Boot Loader # Install a boot loader like GRUB or systemd-boot. For GRUB, install it with pacman -S grub and then run grub-install --target=i386-pc /dev/sdX (replace /dev/sdX with your disk). Generate the GRUB configuration file with grub-mkconfig -o /boot/grub/grub.cfg. Step 17: Reboot # Exit the chroot environment by typing exit. Unmount all mounted partitions with umount -R /mnt. Reboot your system with reboot. ","date":"15 April 2024","externalUrl":null,"permalink":"/blog/install-arch/","section":"My Blogs","summary":"","title":"Install Arch Guide","type":"blog"},{"content":" Who am I ? # Hello, I am Utkarsh from India. Currently, I am enrolled in an undergraduate program. I have extensive experience in Embedded Engineering, which I have pursued as a hobby for the past 5-6 years. With this expertise, I have freelanced as an Arduino developer. Additionally, I am proficient in Flutter and have completed several projects. Presently, I am learning web development and am interested in exploring machine learning and its applications.\nTimeline # Present 2022-present Joined University\nFreelancing 2020-2021 Freelanced on fiver as an Arduino Developer\nCompleted School 2018-2020 Science Exhibitions Loved to participate! Won Some Lost Many\nFirst Time On Youtube 2015 It's 144p\nDiscovering my Interest 2014 During the summer vacation of 2014, I received an electronics starter kit, sparking a deep interest in tinkering. Completely new to the field at the time, I eagerly dived into experimentation. Despite my initial lack of knowledge, I eagerly explored Google for circuit designs. Using only a timer 555, I embarked on a self-guided journey of learning through YouTube tutorials, gradually honing my skills and expanding my understanding of electronics. ","date":"14 April 2024","externalUrl":null,"permalink":"/about/","section":"Utkarsh Deoli","summary":"","title":"Utkarsh Deoli","type":"about"},{"content":" What is DSA? # DSA is defined as a combination of two separate yet interrelated topics ‚Äì Data Structure and Algorithms. DSA is one of the most important skills that every computer science student must have. It is often seen that people with good knowledge of these technologies are better programmers than others and thus, crack the interviews of almost every tech giant.\n![[DSAIMG.png]]\nWhat is Data Structure? # A data structure is defined as a particular way of storing and organizing data in our devices to use the data efficiently and effectively. The main idea behind using data structures is to minimize the time and space complexities. An efficient data structure takes minimum memory space and requires minimum time to execute the data.\nWhat is Algorithm? # Algorithm is defined as a process or set of well-defined instructions that are typically used to solve a particular group of problems or perform a specific type of calculation. To explain in simpler terms, it is a set of operations performed in a step-by-step manner to execute a task.\nHow to start learning DSA? # The first and foremost thing is dividing the total procedure into little pieces which need to be done sequentially. The complete process to learn DSA from scratch can be broken into 4 parts:\n1. [[02 Time and Space complexities]] # Data Structures\nStacks Queue Linked List Tree Graph 3. [[04 Algorithms]] # Problems # [[Next or Previous Greatest or Smallest]] 729. My Calendar I 731. My Calendar II 732. My Calendar III 200. Number of Islands 238. Product of Array Except Self 134. Gas Station 121. Best Time to Buy and Sell Stock 122. Best Time to Buy and Sell Stock II 1476. Subrectangle Queries 73. Set Matrix Zeroes (Look at the best approach) Link 200. Number of Islands 334. Increasing Triplet Subsequence [0] 238. Product of Array Except Self Questions Leetcode [[05 DSA Problem Sheet]] -\u0026gt; Collage Problem Sheet\n[[2962. Count Sub-arrays Where Max Element Appears at Least K Times]] [[2958. Length of Longest Subarray With at Most K Frequency]] ","date":"13 April 2024","externalUrl":null,"permalink":"/blog/dsa/","section":"My Blogs","summary":"","title":"Data Structures And Algo","type":"blog"},{"content":" Introduction # This document is about Forest Fire Detection \u0026amp; Prevention. Forest fires are a serious environmental issue, causing significant damage to our ecosystems and contributing to climate change.\nCauses of Forest Fires # Forest fires can be caused by a variety of factors, including:\nLightning strikes Human activities, such as campfires or discarded cigarettes Volcanic activity Detection and Prevention # Efforts to detect and prevent forest fires include:\nMonitoring weather conditions Enforcing regulations on outdoor activities during high-risk periods Educating the public about the risks and prevention measures UtkarshDeoli/Tomato-Timer A custom pomodoro timer with more clock features Dart 0 0 ","date":"13 April 2024","externalUrl":null,"permalink":"/projects/forestfiredetection/forestfire/","section":"Projects","summary":"","title":"Forest Fire Detection \u0026 Prevention","type":"projects"},{"content":"","date":"13 April 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"","date":"12 February 2024","externalUrl":null,"permalink":"/blog/","section":"My Blogs","summary":"","title":"My Blogs","type":"blog"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]